"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const vscode_languageserver_1 = require("vscode-languageserver");
const _1 = require(".");
const MessageHandler_1 = require("../../lib/MessageHandler");
const Schema_1 = require("../../lib/Schema");
const helper_1 = require("../helper");
(0, vitest_1.describe)('relations', () => {
    const getFixturePath = (testName) => `./codeActions/relations/${testName}.prisma`;
    const fixturePath = getFixturePath('one_to_many_referenced_side_misses_unique_single_field');
    const expectedPath = (0, helper_1.fixturePathToUri)(fixturePath);
    const document = (0, helper_1.getTextDocument)(fixturePath);
    const onError = vitest_1.vi.fn();
    const diagnostics = (0, MessageHandler_1.handleDiagnosticsRequest)(Schema_1.PrismaSchema.singleFile(document), onError).get(expectedPath);
    (0, vitest_1.test)('@relation referenced side missing @unique', () => {
        (0, _1.assertQuickFix)([
            {
                title: 'Make referenced field(s) unique',
                kind: vscode_languageserver_1.CodeActionKind.QuickFix,
                diagnostics,
                edit: {
                    changes: {
                        [expectedPath]: [
                            {
                                range: {
                                    start: { line: 7, character: 11 },
                                    end: { line: 7, character: 11 },
                                },
                                newText: ' @unique',
                            },
                        ],
                    },
                },
            },
        ], document, {
            start: { line: 14, character: 48 },
            end: { line: 14, character: 48 },
        }, diagnostics);
    });
});
//# sourceMappingURL=relation.test.js.map