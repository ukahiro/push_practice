"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const MessageHandler_1 = require("../../lib/MessageHandler");
const MultifileHelper_1 = require("../MultifileHelper");
(0, vitest_1.test)('basic doc', () => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    const helper = yield (0, MultifileHelper_1.getMultifileHelper)('quick-fix');
    const profile = helper.file('Profile.prisma');
    const diagnostics = (0, MessageHandler_1.handleDiagnosticsRequest)(helper.schema).get(profile.uri);
    const response = (0, MessageHandler_1.handleCodeActions)(helper.schema, profile.textDocument, {
        textDocument: {
            uri: profile.uri,
        },
        range: {
            start: profile.lineContaining('user   User').characterAfter('us'),
            end: profile.lineContaining('user   User').characterAfter('user'),
        },
        context: {
            diagnostics,
        },
    });
    const changes = (_b = (_a = response[0]) === null || _a === void 0 ? void 0 : _a.edit) === null || _b === void 0 ? void 0 : _b.changes;
    const updated = helper.applyChanges(changes);
    (0, vitest_1.expect)(updated).toMatchInlineSnapshot(`
    {
      "file:///quick-fix/Profile.prisma": "model Profile {
        id     String @id @default(uuid())
        userId String @unique
        user   User   @relation(fields: [userId], references: [id])
    }
    ",
    }
  `);
}));
//# sourceMappingURL=multi-file.test.js.map